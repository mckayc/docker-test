version: '3.8'
services:
  task_donegeon:
    build:
      context: .
      dockerfile: Dockerfile.prod
    ports:
      - "5485:5000"
    environment:
      - PORT=5000
      - FLASK_ENV=production
      - PYTHONUNBUFFERED=1  # Ensure Python output is sent to container logs
      - SECRET_KEY=${SECRET_KEY:-changeme_in_production}
      - DATABASE_URL=${DATABASE_URL:-sqlite:///instance/task_donegeon.db}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - MAX_UPLOAD_SIZE=${MAX_UPLOAD_SIZE:-16777216}  # 16MB in bytes
    volumes:
      - task_donegeon_data:/app/instance
      - task_donegeon_config:/app/config
      - task_donegeon_uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

volumes:
  task_donegeon_data:
    name: task_donegeon_data
    driver: local
    driver_opts:
      type: none
      device: ${DATA_PATH:-/var/lib/task_donegeon/data}
      o: bind
  task_donegeon_config:
    name: task_donegeon_config
    driver: local
    driver_opts:
      type: none
      device: ${CONFIG_PATH:-/var/lib/task_donegeon/config}
      o: bind
  task_donegeon_uploads:
    name: task_donegeon_uploads
    driver: local
    driver_opts:
      type: none
      device: ${UPLOADS_PATH:-/var/lib/task_donegeon/uploads}
      o: bind 